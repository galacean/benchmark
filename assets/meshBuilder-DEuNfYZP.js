import{L as M,V as I,v as p,d as W,T as X,w as U,G as Y,e as R,C as N,x as Z,y as E,z as H,F as q,J as k,K,N as J,R as Q,W as _,X as $,Y as ee,Z as te,_ as se,$ as oe,a0 as ae,a1 as ne,a2 as ie,a3 as ce,a4 as re,a5 as he,a6 as le,a7 as fe,a8 as xe,a9 as de,aa as ue,ab as Ae,ac as ye,ad as Be}from"./flowGraphSceneTickEventBlock-DEC0JThK.js";class v{constructor(t=0,e=0){this.x=t,this.y=e,t!==Math.floor(t)&&M.Warn("x is not an integer, floor(x) used"),e!==Math.floor(e)&&M.Warn("y is not an integer, floor(y) used")}clone(){return new v(this.x,this.y)}rotate60About(t){const e=this.x;return this.x=t.x+t.y-this.y,this.y=e+this.y-t.x,this}rotateNeg60About(t){const e=this.x;return this.x=e+this.y-t.y,this.y=t.x+t.y-e,this}rotate120(t,e){t!==Math.floor(t)&&M.Warn("m not an integer only floor(m) used"),e!==Math.floor(e)&&M.Warn("n not an integer only floor(n) used");const o=this.x;return this.x=t-o-this.y,this.y=e+o,this}rotateNeg120(t,e){t!==Math.floor(t)&&M.Warn("m is not an integer, floor(m) used"),e!==Math.floor(e)&&M.Warn("n is not an integer,   floor(n) used");const o=this.x;return this.x=this.y-e,this.y=t+e-o-this.y,this}toCartesianOrigin(t,e){const o=I.Zero();return o.x=t.x+2*this.x*e+this.y*e,o.y=t.y+Math.sqrt(3)*this.y*e,o}static Zero(){return new v(0,0)}}class S{constructor(){this.cartesian=[],this.vertices=[],this.max=[],this.min=[],this.closestTo=[],this.innerFacets=[],this.isoVecsABOB=[],this.isoVecsOBOA=[],this.isoVecsBAOA=[],this.vertexTypes=[],this.IDATA=new j("icosahedron","Regular",[[0,p,-1],[-p,1,0],[-1,0,-p],[1,0,-p],[p,1,0],[0,p,1],[-1,0,p],[-p,-1,0],[0,-p,-1],[p,-1,0],[1,0,p],[0,-p,1]],[[0,2,1],[0,3,2],[0,4,3],[0,5,4],[0,1,5],[7,6,1],[8,7,2],[9,8,3],[10,9,4],[6,10,5],[2,7,1],[3,8,2],[4,9,3],[5,10,4],[1,6,5],[11,6,7],[11,7,8],[11,8,9],[11,9,10],[11,10,6]])}setIndices(){let t=12;const e={},o=this.m,s=this.n;let i=o,a=1,c=0;s!==0&&(i=W.HCF(o,s)),a=o/i,c=s/i;let h,f,y,g,d;const F=v.Zero(),u=new v(o,s),B=new v(-s,o+s),A=v.Zero(),D=v.Zero(),O=v.Zero();let b=[],l,n,r,V;const z=[],x=this.vertByDist,w=(C,m,G,L)=>{l=C+"|"+G,n=m+"|"+L,l in e||n in e?l in e&&!(n in e)?e[n]=e[l]:n in e&&!(l in e)&&(e[l]=e[n]):(e[l]=t,e[n]=t,t++),x[G][0]>2?z[e[l]]=[-x[G][0],x[G][1],e[l]]:z[e[l]]=[b[x[G][0]],x[G][1],e[l]]};this.IDATA.edgematch=[[1,"B"],[2,"B"],[3,"B"],[4,"B"],[0,"B"],[10,"O",14,"A"],[11,"O",10,"A"],[12,"O",11,"A"],[13,"O",12,"A"],[14,"O",13,"A"],[0,"O"],[1,"O"],[2,"O"],[3,"O"],[4,"O"],[19,"B",5,"A"],[15,"B",6,"A"],[16,"B",7,"A"],[17,"B",8,"A"],[18,"B",9,"A"]];for(let C=0;C<20;C++){if(b=this.IDATA.face[C],y=b[2],g=b[1],d=b[0],r=F.x+"|"+F.y,l=C+"|"+r,l in e||(e[l]=y,z[y]=[b[x[r][0]],x[r][1]]),r=u.x+"|"+u.y,l=C+"|"+r,l in e||(e[l]=g,z[g]=[b[x[r][0]],x[r][1]]),r=B.x+"|"+B.y,l=C+"|"+r,l in e||(e[l]=d,z[d]=[b[x[r][0]],x[r][1]]),h=this.IDATA.edgematch[C][0],f=this.IDATA.edgematch[C][1],f==="B")for(let m=1;m<i;m++)D.x=o-m*(a+c),D.y=s+m*a,O.x=-m*c,O.y=m*(a+c),r=D.x+"|"+D.y,V=O.x+"|"+O.y,w(C,h,r,V);if(f==="O")for(let m=1;m<i;m++)O.x=-m*c,O.y=m*(a+c),A.x=m*a,A.y=m*c,r=O.x+"|"+O.y,V=A.x+"|"+A.y,w(C,h,r,V);if(h=this.IDATA.edgematch[C][2],f=this.IDATA.edgematch[C][3],f&&f==="A")for(let m=1;m<i;m++)A.x=m*a,A.y=m*c,D.x=o-(i-m)*(a+c),D.y=s+(i-m)*a,r=A.x+"|"+A.y,V=D.x+"|"+D.y,w(C,h,r,V);for(let m=0;m<this.vertices.length;m++)r=this.vertices[m].x+"|"+this.vertices[m].y,l=C+"|"+r,l in e||(e[l]=t++,x[r][0]>2?z[e[l]]=[-x[r][0],x[r][1],e[l]]:z[e[l]]=[b[x[r][0]],x[r][1],e[l]])}this.closestTo=z,this.vecToidx=e}calcCoeffs(){const t=this.m,e=this.n,o=Math.sqrt(3)/3,s=t*t+e*e+t*e;this.coau=(t+e)/s,this.cobu=-e/s,this.coav=-o*(t-e)/s,this.cobv=o*(2*t+e)/s}createInnerFacets(){const t=this.m,e=this.n;for(let o=0;o<e+t+1;o++)for(let s=this.min[o];s<this.max[o]+1;s++)s<this.max[o]&&s<this.max[o+1]+1&&this.innerFacets.push(["|"+s+"|"+o,"|"+s+"|"+(o+1),"|"+(s+1)+"|"+o]),o>0&&s<this.max[o-1]&&s+1<this.max[o]+1&&this.innerFacets.push(["|"+s+"|"+o,"|"+(s+1)+"|"+o,"|"+(s+1)+"|"+(o-1)])}edgeVecsABOB(){const t=this.m,e=this.n,o=new v(-e,t+e);for(let s=1;s<t+e;s++){const i=new v(this.min[s],s),a=new v(this.min[s-1],s-1),c=new v(this.min[s+1],s+1),h=i.clone(),f=a.clone(),y=c.clone();h.rotate60About(o),f.rotate60About(o),y.rotate60About(o);const g=new v(this.max[h.y],h.y),d=new v(this.max[h.y-1],h.y-1),F=new v(this.max[h.y-1]-1,h.y-1);(h.x!==g.x||h.y!==g.y)&&(h.x!==d.x?(this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([i,d,F]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([i,F,g])):h.y===y.y?(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([i,a,d]),this.vertexTypes.push([1,0,1]),this.isoVecsABOB.push([i,d,c])):(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([i,a,d]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([i,d,g])))}}mapABOBtoOBOA(){const t=new v(0,0);for(let e=0;e<this.isoVecsABOB.length;e++){const o=[];for(let s=0;s<3;s++)t.x=this.isoVecsABOB[e][s].x,t.y=this.isoVecsABOB[e][s].y,this.vertexTypes[e][s]===0&&t.rotateNeg120(this.m,this.n),o.push(t.clone());this.isoVecsOBOA.push(o)}}mapABOBtoBAOA(){const t=new v(0,0);for(let e=0;e<this.isoVecsABOB.length;e++){const o=[];for(let s=0;s<3;s++)t.x=this.isoVecsABOB[e][s].x,t.y=this.isoVecsABOB[e][s].y,this.vertexTypes[e][s]===1&&t.rotate120(this.m,this.n),o.push(t.clone());this.isoVecsBAOA.push(o)}}MapToFace(t,e){const o=this.IDATA.face[t],s=o[2],i=o[1],a=o[0],c=I.FromArray(this.IDATA.vertex[s]),h=I.FromArray(this.IDATA.vertex[i]),f=I.FromArray(this.IDATA.vertex[a]),y=h.subtract(c),g=f.subtract(c),d=y.scale(this.coau).add(g.scale(this.cobu)),F=y.scale(this.coav).add(g.scale(this.cobv));let u,B=X.Vector3[0];for(let A=0;A<this.cartesian.length;A++)B=d.scale(this.cartesian[A].x).add(F.scale(this.cartesian[A].y)).add(c),B.x,B.y,B.z,u=t+"|"+this.vertices[A].x+"|"+this.vertices[A].y,e.vertex[this.vecToidx[u]]=[B.x,B.y,B.z]}build(t,e){const o=[],s=v.Zero(),i=new v(t,e),a=new v(-e,t+e);o.push(s,i,a);for(let n=e;n<t+1;n++)for(let r=0;r<t+1-n;r++)o.push(new v(r,n));if(e>0){const n=W.HCF(t,e),r=t/n,V=e/n;for(let x=1;x<n;x++)o.push(new v(x*r,x*V)),o.push(new v(-x*V,x*(r+V))),o.push(new v(t-x*(r+V),e+x*r));const z=t/e;for(let x=1;x<e;x++)for(let w=0;w<x*z;w++)o.push(new v(w,x)),o.push(new v(w,x).rotate120(t,e)),o.push(new v(w,x).rotateNeg120(t,e))}o.sort((n,r)=>n.x-r.x),o.sort((n,r)=>n.y-r.y);const c=new Array(t+e+1),h=new Array(t+e+1);for(let n=0;n<c.length;n++)c[n]=1/0,h[n]=-1/0;let f=0,y=0;const g=o.length;for(let n=0;n<g;n++)y=o[n].x,f=o[n].y,c[f]=Math.min(y,c[f]),h[f]=Math.max(y,h[f]);const d=(n,r)=>{const V=n.clone();return r==="A"&&V.rotateNeg120(t,e),r==="B"&&V.rotate120(t,e),V.x<0?V.y:V.x+V.y},F=[],u=[],B=[],A=[],D={},O=[];let b=-1,l=-1;for(let n=0;n<g;n++)F[n]=o[n].toCartesianOrigin(new v(0,0),.5),u[n]=d(o[n],"O"),B[n]=d(o[n],"A"),A[n]=d(o[n],"B"),u[n]===B[n]&&B[n]===A[n]?(b=3,l=u[n]):u[n]===B[n]?(b=4,l=u[n]):B[n]===A[n]?(b=5,l=B[n]):A[n]===u[n]&&(b=6,l=u[n]),u[n]<B[n]&&u[n]<A[n]&&(b=2,l=u[n]),B[n]<u[n]&&B[n]<A[n]&&(b=1,l=B[n]),A[n]<B[n]&&A[n]<u[n]&&(b=0,l=A[n]),O.push([b,l,o[n].x,o[n].y]);O.sort((n,r)=>n[2]-r[2]),O.sort((n,r)=>n[3]-r[3]),O.sort((n,r)=>n[1]-r[1]),O.sort((n,r)=>n[0]-r[0]);for(let n=0;n<O.length;n++)D[O[n][2]+"|"+O[n][3]]=[O[n][0],O[n][1],n];return this.m=t,this.n=e,this.vertices=o,this.vertByDist=D,this.cartesian=F,this.min=c,this.max=h,this}}class j{constructor(t,e,o,s){this.name=t,this.category=e,this.vertex=o,this.face=s}}class P extends j{innerToData(t,e){for(let o=0;o<e.innerFacets.length;o++)this.face.push(e.innerFacets[o].map(s=>e.vecToidx[t+s]))}mapABOBtoDATA(t,e){const o=e.IDATA.edgematch[t][0];for(let s=0;s<e.isoVecsABOB.length;s++){const i=[];for(let a=0;a<3;a++)e.vertexTypes[s][a]===0?i.push(t+"|"+e.isoVecsABOB[s][a].x+"|"+e.isoVecsABOB[s][a].y):i.push(o+"|"+e.isoVecsABOB[s][a].x+"|"+e.isoVecsABOB[s][a].y);this.face.push([e.vecToidx[i[0]],e.vecToidx[i[1]],e.vecToidx[i[2]]])}}mapOBOAtoDATA(t,e){const o=e.IDATA.edgematch[t][0];for(let s=0;s<e.isoVecsOBOA.length;s++){const i=[];for(let a=0;a<3;a++)e.vertexTypes[s][a]===1?i.push(t+"|"+e.isoVecsOBOA[s][a].x+"|"+e.isoVecsOBOA[s][a].y):i.push(o+"|"+e.isoVecsOBOA[s][a].x+"|"+e.isoVecsOBOA[s][a].y);this.face.push([e.vecToidx[i[0]],e.vecToidx[i[1]],e.vecToidx[i[2]]])}}mapBAOAtoDATA(t,e){const o=e.IDATA.edgematch[t][2];for(let s=0;s<e.isoVecsBAOA.length;s++){const i=[];for(let a=0;a<3;a++)e.vertexTypes[s][a]===1?i.push(t+"|"+e.isoVecsBAOA[s][a].x+"|"+e.isoVecsBAOA[s][a].y):i.push(o+"|"+e.isoVecsBAOA[s][a].x+"|"+e.isoVecsBAOA[s][a].y);this.face.push([e.vecToidx[i[0]],e.vecToidx[i[1]],e.vecToidx[i[2]]])}}orderData(t){const e=[];for(let a=0;a<13;a++)e[a]=[];const o=t.closestTo;for(let a=0;a<o.length;a++)o[a][0]>-1?o[a][1]>0&&e[o[a][0]].push([a,o[a][1]]):e[12].push([a,o[a][0]]);const s=[];for(let a=0;a<12;a++)s[a]=a;let i=12;for(let a=0;a<12;a++){e[a].sort((c,h)=>c[1]-h[1]);for(let c=0;c<e[a].length;c++)s[e[a][c][0]]=i++}for(let a=0;a<e[12].length;a++)s[e[12][a][0]]=i++;for(let a=0;a<this.vertex.length;a++)this.vertex[a].push(s[a]);this.vertex.sort((a,c)=>a[3]-c[3]);for(let a=0;a<this.vertex.length;a++)this.vertex[a].pop();for(let a=0;a<this.face.length;a++)for(let c=0;c<this.face[a].length;c++)this.face[a][c]=s[this.face[a][c]];this.sharedNodes=e[12].length,this.poleNodes=this.vertex.length-this.sharedNodes}setOrder(t,e){const o=[],s=[];let i=e.pop();s.push(i);let a=this.face[i].indexOf(t);a=(a+2)%3;let c=this.face[i][a];o.push(c);let h=0;for(;e.length>0;)i=e[h],this.face[i].indexOf(c)>-1?(a=(this.face[i].indexOf(c)+1)%3,c=this.face[i][a],o.push(c),s.push(i),e.splice(h,1),h=0):h++;return this.adjacentFaces.push(o),s}toGoldbergPolyhedronData(){const t=new j("GeoDual","Goldberg",[],[]);t.name="GD dual";const e=this.vertex.length,o=new Array(e);for(let f=0;f<e;f++)o[f]=[];for(let f=0;f<this.face.length;f++)for(let y=0;y<3;y++)o[this.face[f][y]].push(f);let s=0,i=0,a=0,c=[],h=[];this.adjacentFaces=[];for(let f=0;f<o.length;f++)t.face[f]=this.setOrder(f,o[f].concat([])),o[f].forEach(y=>{s=0,i=0,a=0,c=this.face[y];for(let g=0;g<3;g++)h=this.vertex[c[g]],s+=h[0],i+=h[1],a+=h[2];t.vertex[y]=[s/3,i/3,a/3]});return t}static BuildGeodesicData(t){const e=new P("Geodesic-m-n","Geodesic",[[0,p,-1],[-p,1,0],[-1,0,-p],[1,0,-p],[p,1,0],[0,p,1],[-1,0,p],[-p,-1,0],[0,-p,-1],[p,-1,0],[1,0,p],[0,-p,1]],[]);t.setIndices(),t.calcCoeffs(),t.createInnerFacets(),t.edgeVecsABOB(),t.mapABOBtoOBOA(),t.mapABOBtoBAOA();for(let s=0;s<t.IDATA.face.length;s++)t.MapToFace(s,e),e.innerToData(s,t),t.IDATA.edgematch[s][1]==="B"&&e.mapABOBtoDATA(s,t),t.IDATA.edgematch[s][1]==="O"&&e.mapOBOAtoDATA(s,t),t.IDATA.edgematch[s][3]==="A"&&e.mapBAOAtoDATA(s,t);e.orderData(t);const o=1;return e.vertex=e.vertex.map(function(s){const i=s[0],a=s[1],c=s[2],h=Math.sqrt(i*i+a*a+c*c);return s[0]*=o/h,s[1]*=o/h,s[2]*=o/h,s}),e}}function ge(T,t,e=null){let o=t.m||1;o!==Math.floor(o)&&M.Warn("m not an integer only floor(m) used");let s=t.n||0;if(s!==Math.floor(s)&&M.Warn("n not an integer only floor(n) used"),s>o){const f=s;s=o,o=f,M.Warn("n > m therefore m and n swapped")}const i=new S;i.build(o,s);const c={custom:P.BuildGeodesicData(i),size:t.size,sizeX:t.sizeX,sizeY:t.sizeY,sizeZ:t.sizeZ,faceUV:t.faceUV,faceColors:t.faceColors,flat:t.flat,updatable:t.updatable,sideOrientation:t.sideOrientation,frontUVs:t.frontUVs,backUVs:t.backUVs};return U(T,c,e)}function Oe(T,t){const e=T.size,o=T.sizeX||e||1,s=T.sizeY||e||1,i=T.sizeZ||e||1,a=T.sideOrientation===0?0:T.sideOrientation||Z.DEFAULTSIDE,c=[],h=[],f=[],y=[];let g=1/0,d=-1/0,F=1/0,u=-1/0;for(let D=0;D<t.vertex.length;D++)g=Math.min(g,t.vertex[D][0]*o),d=Math.max(d,t.vertex[D][0]*o),F=Math.min(F,t.vertex[D][1]*s),u=Math.max(u,t.vertex[D][1]*s);let B=0;for(let D=0;D<t.face.length;D++){const O=t.face[D],b=I.FromArray(t.vertex[O[0]]),l=I.FromArray(t.vertex[O[2]]),n=I.FromArray(t.vertex[O[1]]),r=l.subtract(b),V=n.subtract(b),z=I.Cross(V,r).normalize();for(let x=0;x<O.length;x++){f.push(z.x,z.y,z.z);const w=t.vertex[O[x]];c.push(w[0]*o,w[1]*s,w[2]*i);const C=(w[1]*s-F)/(u-F);y.push((w[0]*o-g)/(d-g),E.UseOpenGLOrientationForUV?1-C:C)}for(let x=0;x<O.length-2;x++)h.push(B,B+x+2,B+x+1);B+=O.length}Z._ComputeSides(a,c,h,f,y);const A=new Z;return A.positions=c,A.indices=h,A.normals=f,A.uvs=y,A}function ve(T,t,e=null){const o=t.size,s=t.sizeX||o||1,i=t.sizeY||o||1,a=t.sizeZ||o||1;let c=t.m||1;c!==Math.floor(c)&&M.Warn("m not an integer only floor(m) used");let h=t.n||0;if(h!==Math.floor(h)&&M.Warn("n not an integer only floor(n) used"),h>c){const u=h;h=c,c=u,M.Warn("n > m therefore m and n swapped")}const f=new S;f.build(c,h);const y=P.BuildGeodesicData(f),g=y.toGoldbergPolyhedronData(),d=new Y(T,e);t.sideOrientation=R._GetDefaultSideOrientation(t.sideOrientation),d._originalBuilderSideOrientation=t.sideOrientation,Oe(t,g).applyToMesh(d,t.updatable),d.goldbergData.nbSharedFaces=y.sharedNodes,d.goldbergData.nbUnsharedFaces=y.poleNodes,d.goldbergData.adjacentFaces=y.adjacentFaces,d.goldbergData.nbFaces=d.goldbergData.nbSharedFaces+d.goldbergData.nbUnsharedFaces,d.goldbergData.nbFacesAtPole=(d.goldbergData.nbUnsharedFaces-12)/12;for(let u=0;u<y.vertex.length;u++)d.goldbergData.faceCenters.push(I.FromArray(y.vertex[u])),d.goldbergData.faceCenters[u].x*=s,d.goldbergData.faceCenters[u].y*=i,d.goldbergData.faceCenters[u].z*=a,d.goldbergData.faceColors.push(new N(1,1,1,1));for(let u=0;u<g.face.length;u++){const B=g.face[u],A=I.FromArray(g.vertex[B[0]]),D=I.FromArray(g.vertex[B[2]]),O=I.FromArray(g.vertex[B[1]]),b=D.subtract(A),l=O.subtract(A),n=I.Cross(l,b).normalize(),r=I.Cross(l,n).normalize();d.goldbergData.faceXaxis.push(l.normalize()),d.goldbergData.faceYaxis.push(n),d.goldbergData.faceZaxis.push(r)}return d}const De={CreateBox:H,CreateTiledBox:q,CreateSphere:k,CreateDisc:K,CreateIcoSphere:J,CreateRibbon:Q,CreateCylinder:_,CreateTorus:$,CreateTorusKnot:ee,CreateLineSystem:te,CreateLines:se,CreateDashedLines:oe,ExtrudeShape:ae,ExtrudeShapeCustom:ne,CreateLathe:ie,CreateTiledPlane:ce,CreatePlane:re,CreateGround:he,CreateTiledGround:le,CreateGroundFromHeightMap:fe,CreatePolygon:xe,ExtrudePolygon:de,CreateTube:ue,CreatePolyhedron:U,CreateGeodesic:ge,CreateGoldberg:ve,CreateDecal:Ae,CreateCapsule:ye,CreateText:Be};export{De as M};
